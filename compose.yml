version: "3.0"


services:
  web:
    build: .
    volumes:
      - .:/app
    command : >
          sh -c "alembic upgrade head && 
                   fastapi run src --port 8000 --host 0.0.0.0"
    environment: 
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://postgres:testpass@db:5432/bookly}
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key-change-in-production-12345}
      JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
      MAIL_USERNAME: ${MAIL_USERNAME:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}
      MAIL_SERVER: ${MAIL_SERVER:-smtp.gmail.com}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_FROM: ${MAIL_FROM:-noreply@example.com}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME:-Bookly}
      DOMAIN: ${DOMAIN:-localhost:8000}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}


    ports:
      - "8000:8000"


    depends_on:
      db:
        condition: service_healthy  
      redis:
        condition: service_started


    networks:
      - app-network


  db:
    image: postgres:15


    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: bookly
      POSTGRES_PASSWORD: testpass


    ports:
     - "5432:5432"


    volumes:
      - db-data:/var/lib/postgresql/data


    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
      
  redis:
    image: redis:6


    ports:
     - "6379:6379"


    networks:
     - app-network


  celery:
    build: .


    command: celery -A src.celery_tasks.c_app worker --loglevel=INFO


    volumes:
      - .:/app


    depends_on:
      - redis


    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}


    networks:
      - app-network


volumes:
  db-data:


networks:
  app-network:
    driver: bridge
